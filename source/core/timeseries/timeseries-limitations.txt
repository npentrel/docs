.. _manual-timeseries-collection-limitations:

==================================
Time-series Collection Limitations
==================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. meta::
   :description: Time-series, IOT
   :keywords: Time-series, IOT

Constraints
~~~~~~~~~~~

The maximum size of a measurement document is 4 MB.

Updates
~~~~~~~

Time-series collections only support insert operations and queries.
Updates of existing measurements result in an error.

Deletes
~~~~~~~

Time-series collections only support insert operations and queries.
Manual delete operations aren't allowed.

To automatically delete old data, :ref:`set up automatic removal (TTL)
<set-up-automatic-removal>`.

To remove all documents from a collection, use the
:method:`~db.collection.drop()` method to drop the collection and
recreate the time-series collection.

Secondary Indexes
~~~~~~~~~~~~~~~~~

You can add secondary indexes only on the fields specified as the
``timeField`` and the ``metaField``. If the field value for the
``metaField`` field is a document, you can also create secondary indexes
on fields inside that document.

The ``metaField`` doesn't support the following index types:

- :doc:`2d </core/2d>`
- :doc:`2dsphere </core/2dsphere>`
- :doc:`text </core/index-text>` ?????
- :doc:`geoHaystack </core/geohaystack>`

Secondary indexes don't support the following index properties:

- :doc:`TTL </core/index-ttl>`
- :doc:`Unique </core/index-unique>`
- :doc:`Partial </core/index-partial>`

reIndex
~~~~~~~

The :dbcommand:`reIndex` command is not supported for time-series
collections.

Capped Collections
~~~~~~~~~~~~~~~~~~

A time-series collection can't be created as a :ref:`capped collection
<manual-capped-collection>`.

Modification of Collection Type
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A collection's type can only be set when creating the collection:

- An existing collection can't be converted into a :ref:`time-series
  collection <manual-capped-collection>`.
- A :ref:`time-series collection <manual-capped-collection>` can't be
  converted into other collection types.

To move data from an existing collection to a time-series collectioon,
:ref:`migrate data into a time-series collection
<migrate-data-into-a-timeseries-collection>`.

Modification of ``timeField`` and ``metaField``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A collection's ``timeField`` and ``metaField`` parameters can only be
set when creating the collection. After creation these parameters can't
be modified.

Schema Validation
~~~~~~~~~~~~~~~~~

You cannot specify :doc:`validation rules </core/schema-validation>` for
time-series collections.

Client-Side Field Level Encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:doc:`Client-side field level encryption
</core/security-client-side-encryption>` is not supported for
time-series collections.

Sharding
~~~~~~~~

Time-series collections cannot be sharded.

Aggregation $out and $merge
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The aggregation pipeline stages :pipeline:`$out` and :pipeline:`$merge`
can't output to a time-series collection.

Transactions
~~~~~~~~~~~~

You can't write to doc:`timeseries </core/timeseries-collections>`
collections in :doc:`transactions </core/transactions>`. Reads from
time-series collections are still supported in transactions.

Change streams
~~~~~~~~~~~~~~

:doc:`Change streams </changeStreams>` are not supported for time-series
collections.

Collection and Index Size
~~~~~~~~~~~~~~~~~~~~~~~~~

The following commands are either not supported or return incomplete
information:

- :method:`db.collection.dataSize()`
- :method:`db.collection.stats()`
- :method:`db.collection.storageSize()`
- :method:`db.collection.totalIndexSize()`
- :method:`db.collection.totalSize()`